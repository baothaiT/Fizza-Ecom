// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thinh_Ecom.Data;

namespace Thinh_Ecom.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220422200451_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            RoleId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb4fd"
                        },
                        new
                        {
                            UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            RoleId = "360E601E-92F2-4F08-832B-604A21293258"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.About", b =>
                {
                    b.Property<int>("about_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("about_AppUserFK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("about_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("about_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("about_Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("about_id");

                    b.HasIndex("about_AppUserFK");

                    b.ToTable("About");

                    b.HasData(
                        new
                        {
                            about_id = 1,
                            about_Description = "The Big Oxmox advised her not to do so, because there were thousands of bad Commas, wild Question Marks and devious Semikoli, but the Little Blind Text didn’t listen. She packed her seven versalia, put her initial into the belt and made herself on the way. \n \n When she reached the first hills of the Italic Mountains, she had a last view back on the skyline of her hometown Bookmarksgrove,the headline of Alphabet Village and the subline of her own road,the Line Lane.Pityful a rethoric question ran over her cheek,then she continued her way.",
                            about_Title = "Footwear the leading eCommerce Store around the Globe",
                            about_Url = "https://www.youtube.com/watch?v=F1vcruph8JA"
                        });
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Bills", b =>
                {
                    b.Property<string>("bill_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("bill_Confirmation")
                        .HasColumnType("bit");

                    b.Property<DateTime>("bill_DatetimeOrder")
                        .HasColumnType("datetime2");

                    b.Property<int>("bill_Discount")
                        .HasColumnType("int");

                    b.Property<bool>("bill_HideStatus")
                        .HasColumnType("bit");

                    b.Property<string>("bill_Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bill_PaidTotal")
                        .HasColumnType("int");

                    b.Property<string>("bill_PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductIdlist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductNamelist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductPricelist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductSizelist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_QuantityList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bill_Shipping")
                        .HasColumnType("int");

                    b.Property<string>("bill_UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("bill_WaitForConfirmation")
                        .HasColumnType("bit");

                    b.HasKey("bill_Id");

                    b.HasIndex("bill_UserId");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            bill_Id = "D269BF93-A5E2-4C4A-8146-9967DDE80D30",
                            bill_Confirmation = true,
                            bill_DatetimeOrder = new DateTime(2022, 4, 23, 3, 4, 50, 528, DateTimeKind.Local).AddTicks(4356),
                            bill_Discount = 0,
                            bill_HideStatus = false,
                            bill_Note = "",
                            bill_PaidTotal = 2000,
                            bill_PaymentMethod = "Check Payment",
                            bill_ProductIdlist = "1|2|3|4",
                            bill_ProductNamelist = "product 1|product 2| product 3| product 4",
                            bill_ProductPricelist = "550|450|350|640",
                            bill_ProductSizelist = "7|8|9|14",
                            bill_QuantityList = "1|1|2|1",
                            bill_Shipping = 10,
                            bill_UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            bill_WaitForConfirmation = false
                        });
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Cart", b =>
                {
                    b.Property<string>("cart_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cart_UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("cart_Id");

                    b.HasIndex("cart_UserID");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            cart_Id = "72309286-ECBB-4D20-AD95-2819D31E3400",
                            cart_UserID = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff"
                        },
                        new
                        {
                            cart_Id = "D355458F-1DD3-4834-AA28-6DA34B6357FF",
                            cart_UserID = "DE544998-A3CC-4E12-ABB4-0642E57BD222"
                        });
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.CartsDevice", b =>
                {
                    b.Property<string>("cartd_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cartd_DeviceId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("cartd_Id");

                    b.HasIndex("cartd_DeviceId");

                    b.ToTable("CartsDevice");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Categories", b =>
                {
                    b.Property<string>("cg_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cg_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cg_Sale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cg_Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cg_Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            cg_Id = "489164c7-6e73-431d-9735-99a8b6142ee9",
                            cg_Name = "Pizza",
                            cg_Sale = "",
                            cg_Type = ""
                        },
                        new
                        {
                            cg_Id = "b7869bf8-004a-4070-b51c-a420be7c6dd7",
                            cg_Name = "Spaghetti",
                            cg_Sale = "",
                            cg_Type = ""
                        },
                        new
                        {
                            cg_Id = "0c835c77-ab59-4107-af32-ee0ab33a4e61",
                            cg_Name = "Sidedishes",
                            cg_Sale = "",
                            cg_Type = ""
                        },
                        new
                        {
                            cg_Id = "736cad56-3690-45fe-b30d-aab38431a442",
                            cg_Name = "Drink",
                            cg_Sale = "",
                            cg_Type = ""
                        });
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Comment", b =>
                {
                    b.Property<string>("Comment_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment_Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Comment_HideStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Comment_ReviewType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Comment_UploadTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment_UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Comment_id");

                    b.HasIndex("Comment_UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.CommentInproduct", b =>
                {
                    b.Property<string>("rip_ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("rip_ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("rip_ProductId", "rip_ReviewId");

                    b.HasIndex("rip_ReviewId");

                    b.ToTable("ReviewInproduct");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.ContactForm", b =>
                {
                    b.Property<string>("cf_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cf_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cf_Id");

                    b.ToTable("ContactUsers");

                    b.HasData(
                        new
                        {
                            cf_Id = "d5c92ecd-73f6-493a-891e-03cc05cfc52e",
                            cf_Description = "Description",
                            cf_Email = "Email",
                            cf_Name = "Name",
                            cf_Phone = "0123456789",
                            cf_Subject = "Subject"
                        });
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Coupons", b =>
                {
                    b.Property<string>("couponId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("couponCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("couponPrice")
                        .HasColumnType("int");

                    b.Property<string>("coupon_AppUserFK")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("couponId");

                    b.HasIndex("coupon_AppUserFK");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            couponId = "586aebed-ded3-463e-b5de-db4a6d7728e6",
                            EndTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            couponCode = "code10",
                            couponPrice = 10
                        },
                        new
                        {
                            couponId = "03307722-71d2-4af8-b9f3-85698c188236",
                            EndTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            couponCode = "code50",
                            couponPrice = 50
                        });
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.DeviceInfo", b =>
                {
                    b.Property<string>("deviceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("deviceAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("devicePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("devicePostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceState")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("deviceId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.EmailGuest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailGuest");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.ProductInCart", b =>
                {
                    b.Property<string>("pic_CartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pic_ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("pic_amount")
                        .HasColumnType("int");

                    b.Property<string>("pic_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pic_size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pic_CartId", "pic_ProductId");

                    b.HasIndex("pic_ProductId");

                    b.ToTable("ProductInCart");

                    b.HasData(
                        new
                        {
                            pic_CartId = "D355458F-1DD3-4834-AA28-6DA34B6357FF",
                            pic_ProductId = "0d569469-e5c5-4e91-90aa-5b812f4bae28",
                            pic_amount = 2
                        });
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.ProductInCartDevices", b =>
                {
                    b.Property<string>("picd_CartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("picd_ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("picd_amount")
                        .HasColumnType("int");

                    b.Property<string>("picd_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picd_size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("picd_CartId", "picd_ProductId");

                    b.HasIndex("picd_ProductId");

                    b.ToTable("ProductInCartDevices");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Products", b =>
                {
                    b.Property<string>("pd_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoriesFK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pd_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_MenuFacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pd_Price")
                        .HasColumnType("int");

                    b.Property<int>("pd_Rate")
                        .HasColumnType("int");

                    b.Property<int>("pd_ReducePrice")
                        .HasColumnType("int");

                    b.Property<string>("pd_ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pd_Id");

                    b.HasIndex("CategoriesFK");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            pd_Id = "0d569469-e5c5-4e91-90aa-5b812f4bae28",
                            CategoriesFK = "489164c7-6e73-431d-9735-99a8b6142ee9",
                            pd_Description = "pizza-bo",
                            pd_Img1 = "/img/pizza-300x300/pizza-bo.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Pizza",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "short 1",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "f55fb49c-9017-4e70-93d3-a188419fe847",
                            CategoriesFK = "736cad56-3690-45fe-b30d-aab38431a442",
                            pd_Description = "coca-zero",
                            pd_Img1 = "/img/pizza-300x300/coca-zero.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Cocacola Zero",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "short 2",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "b2721048-39da-4723-875d-634c57f3f897",
                            CategoriesFK = "489164c7-6e73-431d-9735-99a8b6142ee9",
                            pd_Description = "Extravaganza",
                            pd_Img1 = "/img/pizza-300x300/Extravaganza.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Extravaganza",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "567324bb-5a1d-4f98-8c70-5d619c54749b",
                            CategoriesFK = "736cad56-3690-45fe-b30d-aab38431a442",
                            pd_Description = "pfanta-15",
                            pd_Img1 = "/img/pizza-300x300/fanta-15.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "fanta-1.5L",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "short 3",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "7adce088-7dad-419b-b93d-d7d6b100a3a3",
                            CategoriesFK = "489164c7-6e73-431d-9735-99a8b6142ee9",
                            pd_Description = "Haft-haft",
                            pd_Img1 = "/img/pizza-300x300/Haft-haft.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Haft-haft",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "1790aae3-1ecd-4a5b-9bce-01982412fb58",
                            CategoriesFK = "489164c7-6e73-431d-9735-99a8b6142ee9",
                            pd_Description = "Meat-lover",
                            pd_Img1 = "/img/pizza-300x300/Meat-lover.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Meat-lover",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "d346d344-78f6-4413-850a-d4cf6e4ad5a8",
                            CategoriesFK = "0c835c77-ab59-4107-af32-ee0ab33a4e61",
                            pd_Description = "MENU-PC",
                            pd_Img1 = "/img/pizza-300x300/MENU-PC.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "MENU-PC",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "7a79ae51-c567-453e-9280-33945d675159",
                            CategoriesFK = "0c835c77-ab59-4107-af32-ee0ab33a4e61",
                            pd_Description = "MENU-PC-BBQ",
                            pd_Img1 = "/img/pizza-300x300/MENU-PC-BBQ.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "MENU-PC-BBQ",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "c30edf81-dc3b-46f0-8f54-ddd58968b1e2",
                            CategoriesFK = "0c835c77-ab59-4107-af32-ee0ab33a4e61",
                            pd_Description = "MENU-PC-my",
                            pd_Img1 = "/img/pizza-300x300/MENU-PC-my.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "MENU-PC-my",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "3da41b71-cfcb-4ce5-8633-01bfc3dbc485",
                            CategoriesFK = "0c835c77-ab59-4107-af32-ee0ab33a4e61",
                            pd_Description = "MENU-PC-Pho-Mai",
                            pd_Img1 = "/img/pizza-300x300/MENU-PC-Pho-Mai.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "MENU-PC-Pho-Mai",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "f56f57cc-8e58-4958-9a11-42e8b726696f",
                            CategoriesFK = "489164c7-6e73-431d-9735-99a8b6142ee9",
                            pd_Description = "Ocean-mania",
                            pd_Img1 = "/img/pizza-300x300/Ocean-mania.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Ocean-mania",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "526e8354-9316-44df-93d6-3cffd5725a4c",
                            CategoriesFK = "489164c7-6e73-431d-9735-99a8b6142ee9",
                            pd_Description = "Okonomiyaki",
                            pd_Img1 = "/img/pizza-300x300/Okonomiyaki.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Okonomiyaki",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "06df85ed-9c5b-4cfe-b134-8f6ab7f2f192",
                            CategoriesFK = "b7869bf8-004a-4070-b51c-a420be7c6dd7",
                            pd_Description = "pasta-bo-bam",
                            pd_Img1 = "/img/pizza-300x300/pasta-bo-bam.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "pasta",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "5c00313e-d8ef-4fc3-94bb-38d998440a25",
                            CategoriesFK = "b7869bf8-004a-4070-b51c-a420be7c6dd7",
                            pd_Description = "pasta-hai-san",
                            pd_Img1 = "/img/pizza-300x300/pasta-hai-san.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "pasta-hai-san",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "e011a835-9755-4012-9377-d98ed0fda403",
                            CategoriesFK = "b7869bf8-004a-4070-b51c-a420be7c6dd7",
                            pd_Description = "pasta-rau-cu",
                            pd_Img1 = "/img/pizza-300x300/pasta-rau-cu.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "pasta-rau-cu",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "683aaaac-ef5a-4c33-9932-433fa6bf7c14",
                            CategoriesFK = "489164c7-6e73-431d-9735-99a8b6142ee9",
                            pd_Description = "pizza-bo",
                            pd_Img1 = "/img/pizza-300x300/pizza-bo.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "pizza-bo",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "3ca46e54-d24d-440c-9a09-a07db8064f99",
                            CategoriesFK = "489164c7-6e73-431d-9735-99a8b6142ee9",
                            pd_Description = "Pizzaminsea",
                            pd_Img1 = "/img/pizza-300x300/Pizzaminsea.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Pizzaminsea",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        },
                        new
                        {
                            pd_Id = "8d1da1aa-ad34-495a-854f-252f74f3eb85",
                            CategoriesFK = "736cad56-3690-45fe-b30d-aab38431a442",
                            pd_Description = "Sprite-15L",
                            pd_Img1 = "/img/pizza-300x300/Sprite-15L.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Sprite-15L",
                            pd_Price = 10,
                            pd_Rate = 5,
                            pd_ReducePrice = 5,
                            pd_ShortDescription = "",
                            pd_Size = ""
                        });
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Shipping", b =>
                {
                    b.Property<string>("ship_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ship_AppUserFK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ship_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ship_Price")
                        .HasColumnType("int");

                    b.HasKey("ship_Id");

                    b.HasIndex("ship_AppUserFK");

                    b.ToTable("Shipping");

                    b.HasData(
                        new
                        {
                            ship_Id = "7CF94A7D-9239-446E-A404-086518F84652",
                            ship_Name = "Ship",
                            ship_Price = 5
                        });
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.SystemContact", b =>
                {
                    b.Property<int>("Contact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_AppUserFK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contact_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Contact_Id");

                    b.HasIndex("Contact_AppUserFK");

                    b.ToTable("ContactSystems");

                    b.HasData(
                        new
                        {
                            Contact_Id = 1,
                            Contact_Address = " 123, An Lac A Ward, Binh Tan District, HCM",
                            Contact_Email = "admin@gmail.com",
                            Contact_Phone = "0123456789",
                            Contact_Website = "https://shoes.com"
                        });
                });

            modelBuilder.Entity("Thinh_Ecom.EntitiesThinh_Ecom.Entities.AppRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AppRole");

                    b.HasData(
                        new
                        {
                            Id = "f49e4348-718f-43e3-b1f6-6dc89c5Bb4fd",
                            ConcurrencyStamp = "08596506-ccb8-47b3-a781-f2d0bc368579",
                            Name = "Staff",
                            NormalizedName = "Staff",
                            Description = "Staff"
                        },
                        new
                        {
                            Id = "360E601E-92F2-4F08-832B-604A21293258",
                            ConcurrencyStamp = "66ee0b27-6446-4dd6-90e2-c77bd1100c8c",
                            Name = "Admin",
                            NormalizedName = "Admin",
                            Description = "admin"
                        });
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_State")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AppUser");

                    b.HasData(
                        new
                        {
                            Id = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bb5bfdd7-1b7c-449f-81a8-40f01b725238",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGNgHCBtsoPjgZlieQc8a3zkv/On1+Rm7PUQC8wm+9wZG/Gxj+MysrpcpmJ8wiUc4A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d9b936ec-af87-400f-a8be-874d7a22064e",
                            TwoFactorEnabled = false,
                            UserName = "Admin",
                            DoB = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "admin",
                            LastName = "admin"
                        },
                        new
                        {
                            Id = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3dd40644-7ae2-4ca4-ac6f-d2d0273470ba",
                            Email = "staff@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "STAFF@GMAIL.COM",
                            NormalizedUserName = "STAFF@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECO93e1K0z6MLNx1EmSN1olELo+QAJEiAxeLBHeoQiw/2Jdyu26A842i903Q4Tg/dw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6e58c893-6586-4277-b81c-54d6105d7658",
                            TwoFactorEnabled = false,
                            UserName = "Staff",
                            DoB = new DateTime(2020, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "staff",
                            LastName = "staff"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.About", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.AppUser", "AppUser")
                        .WithMany("AboutU")
                        .HasForeignKey("about_AppUserFK");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Bills", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.AppUser", "AppUserB")
                        .WithMany("BillsAU")
                        .HasForeignKey("bill_UserId");

                    b.Navigation("AppUserB");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Cart", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.AppUser", "AppUserC")
                        .WithMany("CartU")
                        .HasForeignKey("cart_UserID");

                    b.Navigation("AppUserC");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.CartsDevice", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.DeviceInfo", "DeviceCD")
                        .WithMany("CartsDeviceD")
                        .HasForeignKey("cartd_DeviceId");

                    b.Navigation("DeviceCD");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Comment", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.AppUser", "AppUserR")
                        .WithMany("ReviewsU")
                        .HasForeignKey("Comment_UserId");

                    b.Navigation("AppUserR");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.CommentInproduct", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.Products", "ProductsRIP")
                        .WithMany("ReviewInproductP")
                        .HasForeignKey("rip_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thinh_Ecom.Entities.Comment", "ReviewsRIP")
                        .WithMany("ReviewInproductR")
                        .HasForeignKey("rip_ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductsRIP");

                    b.Navigation("ReviewsRIP");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Coupons", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.AppUser", "AppUser")
                        .WithMany("CouponsU")
                        .HasForeignKey("coupon_AppUserFK");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.ProductInCart", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.Cart", "CartPICart")
                        .WithMany("ProductInCartC")
                        .HasForeignKey("pic_CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thinh_Ecom.Entities.Products", "ProductsPICart")
                        .WithMany("ProductInCartP")
                        .HasForeignKey("pic_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CartPICart");

                    b.Navigation("ProductsPICart");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.ProductInCartDevices", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.CartsDevice", "CartsDevicePICD")
                        .WithMany("ProductInCartDevicesCD")
                        .HasForeignKey("picd_CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thinh_Ecom.Entities.Products", "ProductsPICD")
                        .WithMany("ProductInCartDevicesP")
                        .HasForeignKey("picd_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CartsDevicePICD");

                    b.Navigation("ProductsPICD");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Products", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.Categories", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoriesFK");

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Shipping", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.AppUser", "AppUser")
                        .WithMany("ShippingU")
                        .HasForeignKey("ship_AppUserFK");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.SystemContact", b =>
                {
                    b.HasOne("Thinh_Ecom.Entities.AppUser", "AppUser")
                        .WithMany("SystemContactU")
                        .HasForeignKey("Contact_AppUserFK");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Cart", b =>
                {
                    b.Navigation("ProductInCartC");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.CartsDevice", b =>
                {
                    b.Navigation("ProductInCartDevicesCD");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Categories", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Comment", b =>
                {
                    b.Navigation("ReviewInproductR");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.DeviceInfo", b =>
                {
                    b.Navigation("CartsDeviceD");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.Products", b =>
                {
                    b.Navigation("ProductInCartDevicesP");

                    b.Navigation("ProductInCartP");

                    b.Navigation("ReviewInproductP");
                });

            modelBuilder.Entity("Thinh_Ecom.Entities.AppUser", b =>
                {
                    b.Navigation("AboutU");

                    b.Navigation("BillsAU");

                    b.Navigation("CartU");

                    b.Navigation("CouponsU");

                    b.Navigation("ReviewsU");

                    b.Navigation("ShippingU");

                    b.Navigation("SystemContactU");
                });
#pragma warning restore 612, 618
        }
    }
}
